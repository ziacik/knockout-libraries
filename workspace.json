{
	"version": 1,
	"projects": {
		"knockout-infinite": {
			"root": "packages/knockout-infinite",
			"sourceRoot": "packages/knockout-infinite/src",
			"projectType": "library",
			"schematics": {},
			"architect": {
				"lint": {
					"builder": "@nrwl/linter:lint",
					"options": {
						"linter": "eslint",
						"tsConfig": [
							"packages/knockout-infinite/tsconfig.lib.json",
							"packages/knockout-infinite/tsconfig.spec.json"
						],
						"exclude": [
							"**/node_modules/**",
							"!packages/knockout-infinite/**/*"
						]
					}
				},
				"test": {
					"builder": "@nrwl/jest:jest",
					"options": {
						"jestConfig": "packages/knockout-infinite/jest.config.js",
						"tsConfig": "packages/knockout-infinite/tsconfig.spec.json",
						"passWithNoTests": true
					}
				},
				"build": {
					"builder": "@nrwl/node:package",
					"options": {
						"outputPath": "dist/packages/knockout-infinite",
						"tsConfig": "packages/knockout-infinite/tsconfig.lib.json",
						"packageJson": "packages/knockout-infinite/package.json",
						"main": "packages/knockout-infinite/src/index.ts",
						"assets": ["packages/knockout-infinite/*.md"]
					}
				}
			}
		}
	},
	"cli": {
		"defaultCollection": "@nrwl/workspace"
	},
	"schematics": {
		"@nrwl/workspace": {
			"library": {
				"linter": "eslint"
			}
		},
		"@nrwl/cypress": {
			"cypress-project": {
				"linter": "eslint"
			}
		},
		"@nrwl/react": {
			"application": {
				"linter": "eslint"
			},
			"library": {
				"linter": "eslint"
			},
			"storybook-configuration": {
				"linter": "eslint"
			}
		},
		"@nrwl/next": {
			"application": {
				"linter": "eslint"
			}
		},
		"@nrwl/web": {
			"application": {
				"linter": "eslint"
			}
		},
		"@nrwl/node": {
			"application": {
				"linter": "eslint"
			},
			"library": {
				"linter": "eslint"
			}
		},
		"@nrwl/nx-plugin": {
			"plugin": {
				"linter": "eslint"
			}
		},
		"@nrwl/nest": {
			"application": {
				"linter": "eslint"
			}
		},
		"@nrwl/express": {
			"application": {
				"linter": "eslint"
			},
			"library": {
				"linter": "eslint"
			}
		}
	}
}
